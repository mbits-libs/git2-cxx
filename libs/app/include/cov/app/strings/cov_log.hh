// THIS FILE IS AUTOGENERATED
// @generated
#pragma once

#include <lngs/lngs.hpp>

// clang-format off
namespace cov::app::str::cov_log {
    enum class lng {
        /// <number> (Name of a number argument)
        NUMBER_META = 1001,
        /// <when> (Name of --color argument)
        WHEN_META = 1002,
        /// <how> (Name of --decorate argument)
        HOW_META = 1003,
        /// <revision-range> (Name of positional argument of cov log)
        REV_RANGE_META = 1004,
        /// <format> (Name of --format argument)
        FORMAT_META = 1005,
        /// uses color in output; <when> is 'never', 'always', or 'auto' (Description for --color argument)
        WHEN_DESCRIPTION = 1006,
        /// prints out ref names of any reports that are shown; <how> is 'short', 'auto', or 'no' (Description for --decorate argument)
        HOW_DESCRIPTION = 1007,
        /// limits the number of reports to output (Description for -n/--max-count argument)
        MAX_COUNT_DESCRIPTION = 1008,
        /// shows only reports in the specified revision range (Description for log and show target argument)
        REV_RANGE_DESCRIPTION = 1009,
        /// pretty-prints the contents of the report logs in a given format, where <format> can be one of 'oneline', 'short', 'medium', 'full', 'fuller', 'reference', 'raw' and 'pretty:<string>'; when <format> is none of the above, and has %placeholder in it, it acts as if --format=pretty:<format> were given (Description for --format argument)
        FORMAT_DESCRIPTION = 1010,
        /// instead of showing the full 40-byte hexadecimal report object name, shows a prefix that names the objects uniquely (Description for --abbrev-hash argument)
        ABBREV_HASH_DESCRIPTION = 1011,
        /// shows the full 40-byte hexadecimal report object name (Description for --no-abbrev-hash argument)
        NO_ABBREV_HASH_DESCRIPTION = 1012,
        /// a shorthand for "--format=oneline --abbrev-hash" used together (Description for --oneline argument)
        ONELINE_DESCRIPTION = 1013,
    }; // enum class lng

    struct Resource {
        static const char* data();
        static std::size_t size();
    };

    using Strings = lngs::SingularStrings<lng, lngs::VersionedFile<1,
        lngs::storage::FileWithBuiltin<Resource>>>;
} // namespace cov::app::str::cov_log
// clang-format on
