name: CovTool

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release, Debug]
        include:
          - os: windows-latest
            build_type: Release
            cpack_generator: ZIP
          - os: ubuntu-latest
            build_type: Release
            cpack_generator: TGZ
          - os: ubuntu-latest
            ubuntu: true
            home: /home/runner
          - os: windows-latest
            windows: true
            home: C:/Users/runneradmin
          - os: ubuntu-latest
            build_type: Debug
            coverage: true
          - latest_conan_hash: 49b35cda083b6915ce102462a9206f25edc385ee90edd0879701d638f077ab0b

    env:
      BUILD_TYPE: ${{ matrix.build_type }}

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
         submodules: true

    - name: GCC 11
      if: ${{ matrix.ubuntu }}
      run: |
        sudo apt install g++-11 -y
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 90
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 90
        sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-11 90 

    - name: Conan output
      run: |
        import os
        dirname = os.path.join('build', 'conan')
        os.makedirs(dirname, exist_ok=True)
        print('>>>', os.getcwd(), '::', dirname, '::', os.path.isdir(dirname))
      shell: python

    - name: Install Conan
      id: conan
      uses: turtlebrowser/get-conan@main

    - name: Configure Conan (GCC C++11 library)
      if: ${{ matrix.ubuntu }}
      run: |
        conan profile new default --detect
        conan profile update settings.compiler.libcxx=libstdc++11 default

    - name: Conan cache
      uses: actions/cache@v3
      id: cache
      with:
        path: ${{ matrix.home }}/.conan/data
        key: ${{ matrix.os }}-${{ matrix.build_type }}-${{ hashFiles('conanfile.txt') }}
        restore-keys: |
          ${{ matrix.os }}-${{ matrix.build_type }}
          ${{ matrix.os }}-${{ matrix.build_type }}-${{ matrix.latest_conan_hash }}

    - name: Configure Conan
      working-directory: ${{github.workspace}}/build/conan
      run: conan install ../.. --build missing -s build_type=${{env.BUILD_TYPE}}

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCOV_CUTDOWN_OS=ON

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Pack
      if: ${{ matrix.cpack_generator != '' }}
      working-directory: ${{github.workspace}}/build
      run: cpack -G ${{ matrix.cpack_generator }}

    - name: Upload packages
      uses: actions/upload-artifact@v3
      if: ${{ matrix.cpack_generator != '' }}
      with:
        name: Packages
        path: ${{github.workspace}}/build/packages/cov-*

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: |
        ctest -C ${{env.BUILD_TYPE}} --output-on-failure

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: Test results
        path: ${{github.workspace}}/build/test-results/
