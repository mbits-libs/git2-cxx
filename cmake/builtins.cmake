set(__content "// Copyright (c) 2022 Marcin Zdun
// This code is licensed under MIT license (see LICENSE for details)
// This file was autogenerated. Do not edit.

#pragma once
#include <cov/app/tools.hh>

namespace cov::app::builtin {
\tusing namespace std::literals\;

")

foreach(NAME ${BUILTINS})
    string(REPLACE "-" "_" SAFE_NAME "${NAME}")
    string(APPEND __content "\tnamespace ${SAFE_NAME} {
\t\tint handle(std::string_view tool, args::arglist args)\;
\t}
")
endforeach()

string(APPEND __content "
\tstatic constexpr app::builtin_tool tools[] = {
")

foreach(NAME ${BUILTINS})
    string(REPLACE "-" "_" SAFE_NAME "${NAME}")
    string(APPEND __content "\t    {\"${NAME}\"sv, ${SAFE_NAME}::handle},
")
endforeach()

string(APPEND __content "\t}\;
}  // namespace cov::app::builtin
")


file(GENERATE
    OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/cov/builtins.hh
    CONTENT ${__content}
)

function(add_cov_tool TARGET)
  cmake_parse_arguments(PARSE_ARGV 1 COV "" "" "")
  add_executable(${TARGET} ${COV_UNPARSED_ARGUMENTS})
	target_link_libraries(${TARGET} PRIVATE app_main)
  if (WIN32)
    target_link_options(${TARGET} PRIVATE /ENTRY:wmainCRTStartup)
  endif()
endfunction()

set(CORE_EXT)

function(setup_cov_ext COV_TOOL)
  set(__CORE ${CORE_EXT} ${COV_TOOL})
  set(CORE_EXT ${__CORE} PARENT_SCOPE)

  set_target_properties(cov-${COV_TOOL} PROPERTIES FOLDER apps/core)
  target_link_options(cov-${COV_TOOL} PRIVATE ${ADDITIONAL_LINK_FLAGS})
	target_compile_options(cov-${COV_TOOL} PRIVATE ${ADDITIONAL_WALL_FLAGS})

	set_target_properties(cov-${COV_TOOL} PROPERTIES
		RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/${CORE_DIR}"
    )

	foreach(BUILD_TYPE DEBUG RELEASE RELWITHDEBINFO MINSIZEREL)
		set_target_properties(cov-${COV_TOOL} PROPERTIES
			RUNTIME_OUTPUT_DIRECTORY_${BUILD_TYPE} "${CMAKE_BINARY_DIR}/${CORE_DIR}"
        )
	endforeach()
endfunction()

macro(add_cov_ext COV_TOOL)
  add_cov_tool(cov-${COV_TOOL} cov-${COV_TOOL}.cc)
  source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES cov-${COV_TOOL}.cc)

	setup_cov_ext(${COV_TOOL})
	install(TARGETS cov-${COV_TOOL}
		RUNTIME DESTINATION ${CORE_DIR}
        COMPONENT tools
    )
endmacro()

function(print_cov_ext)
  set(__CORE ${CORE_EXT})
  string(REPLACE ";" ", " CORE_LIST "${CORE_EXT}")
  message(STATUS "Core extensions: ${CORE_LIST}")
endfunction()
